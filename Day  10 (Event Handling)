Day 10: Event Handling
Tasks/Activities:
Activity 1: Basic Event Handling
• Task 1: Add a click event listener to a button that changes the text content of a paragraph.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Event Handling</title>
</head>
<body>
  <button id="changeTextButton">Click me</button>
  <p id="textParagraph">Original text</p>
  <script>
document.getElementById('changeTextButton').addEventListener('click',function(){
document.getElementById('textParagraph').textContent="Text has been changed':});
 </script>
</body>
</html>

• Task 2: Add a double-click event listener to an image that toggles its visibility.
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Event Handling</title>
</head>
<body>
  <img id="toggleImage" src="image.jpg" alt="Image" style="display: block;">
  <script>
    document.getElementById('toggleImage').addEventListener('dblclick', function() {
      this.style.display = (this.style.display === 'none') ? 'block' : 'none';
    });
  </script>
</body>
</html>

Activity 2: Mouse Events
• Task 3: Add a mouseover event listener to an element that changes its background color.
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Event Handling</title>
</head>
<body>
  <div id="hoverElement" style="width: 200px; height: 100px; background-color: lightgray;">
    Hover over me
  </div>
  <script>
    document.getElementById('hoverElement').addEventListener('mouseover', function() {
      this.style.backgroundColor = 'yellow';
    });
  </script>
</body>
</html>

• Task 4: Add a mouseout event listener to an element that resets its background color.
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Event Handling</title>
</head>
<body>
  <div id="hoverElement" style="width: 200px; height: 100px; background-color: lightgray;">
    Hover over me
  </div>
  <script>
    document.getElementById('hoverElement').addEventListener('mouseout', function() {
      this.style.backgroundColor = 'lightgray';
    });
  </script>
</body>
</html>


Activity 3: Keyboard Events
• Task 5: Add a keydown event listener to an input field that logs the key pressed to the console.
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Event Handling</title>
</head>
<body>
  <div id="hoverElement" style="width: 200px; height: 100px; background-color: lightgray;">
    Hover over me
  </div>
  <script>
    document.getElementById('hoverElement').addEventListener('mouseout', function() {
      this.style.backgroundColor = 'lightgray';
    });
  </script>
</body>
</html>


• Task 6: Add a keyup event listener to an input field that displays the current value in a paragraph.Activity 4: Form Events
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Event Handling</title>
</head>
<body>
  <input type="text" id="keyInput" placeholder="Type something">
  <p id="displayText"></p>
  <script>
    document.getElementById('keyInput').addEventListener('keyup', function() {
      document.getElementById('displayText').textContent = this.value;
    });
  </script>
</body>
</html>



• Task 7: Add a submit event listener to a form that prevents the default submission and logs the form data to the console.
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Event Handling</title>
</head>
<body>
  <form id="myForm">
    <input type="text" name="username" placeholder="Username">
    <input type="password" name="password" placeholder="Password">
    <button type="submit">Submit</button>
  </form>
  <script>
    document.getElementById('myForm').addEventListener('submit', function(event) {
      event.preventDefault();
      const formData = new FormData(this);
      formData.forEach((value, key) => {
        console.log(`${key}: ${value}`);
      });
    });
  </script>
</body>
</html>


• Task 8: Add a change event listener to a select dropdown that displays the selected value in a paragraph.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Event Handling</title>
</head>
<body>
  <select id="mySelect">
    <option value="Option 1">Option 1</option>
    <option value="Option 2">Option 2</option>
    <option value="Option 3">Option 3</option>
  </select>
  <p id="selectedValue">Selected value will be displayed here</p>
  <script>
    document.getElementById('mySelect').addEventListener('change', function() {
      document.getElementById('selectedValue').textContent = `Selected: ${this.value}`;
    });
  </script>
</body>
</html>

Activity 5: Event Delegation

• Task 9: Add a click event listener to a list that logs the text content of the clicked list item using event delegation.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Event Handling</title>
</head>
<body>
  <ul id="myList">
    <li>Item 1</li>
    <li>Item 2</li>
    <li>Item 3</li>
  </ul>
  <script>
    document.getElementById('myList').addEventListener('click', function(event) {
      if (event.target && event.target.nodeName === 'LI') {
        console.log(`List item clicked: ${event.target.textContent}`);
      }
    });
  </script>
</body>
</html>


• Task 10: Add an event listener to a parent element that listens for events from dynamically added child elements.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Event Handling</title>
</head>
<body>
  <div id="parentDiv">
    <button id="addButton">Add Item</button>
    <ul id="dynamicList"></ul>
  </div>
  <script>
    document.getElementById('parentDiv').addEventListener('click', function(event) {
      if (event.target && event.target.nodeName === 'LI') {
        console.log(`Dynamically added list item clicked: ${event.target.textContent}`);
      }
    });

    document.getElementById('addButton').addEventListener('click', function() {
      let newLi = document.createElement('li');
      newLi.textContent = `Item ${document.getElementById('dynamicList').children.length + 1}`;
      document.getElementById('dynamicList').appendChild(newLi);
    });
  </script>
</body>
</html>
