Day 8: ES6+ Features
Tasks/Activities:
Activity 1: Template Literals

• Task 1: Use template literals to create a string that includes variables for a person's name and age, and log the string to the console.
let name="Harshita";
let age=22;
let result=`My name is ${name} and I am ${age} years old.`
console.log(result);

• Task 2: Create a multi-line string using template literals and log it to the console.
let multiLineString=`This is a multi-line string.
It can span multiple lines without any issues.
This is very useful for formatting text.`;
console.log(multiLineString);

Activity 2: Destructuring
• Task 3: Use array destructuring to extract the first and second elements from an array of numbers and log them to the console.
let num=[1,2,3,4,5];
let[first,second]=num;
console.log(first);
console.log(second);

• Task 4: Use object destructuring to extract the title and author from a book object and log them to the console.
let book={
title:"The subtle art of not giving a fuck",
author:"Mark Manson",
year :2010};
let{title,author}=book;
console.log(title);
console.log(author);

Activity 3: Spread and Rest Operators
• Task 5: Use the spread operator to create a new array that includes all elements of an existing array plus additional elements, and log the new array to the console.
let array1=[1,2];
let array2=[...array1,3,4,5];
console.log(array2);

• Task 6: Use the rest operator in a function to accept an arbitrary number of arguments, sum them, and return the result.Activity 4: Default Parameters
function sum(...numers){
return numbers.reduce((total,number)=>total+number,0);
}


Activity 4: Default Parameters

• Task 7: Write a function that takes two parameters and returns their product, with the second parameter having a default value of 1. Log the result of calling this function with and without the second parameter.
function product(a,b=1){
return a*b;
}
console.log(product(2));
console.log(product(10,2));

Activity 5: Enhanced Object Literals

• Task 8: Use enhanced object literals to create an object with methods and properties, and log the object to the console.
let prop1="Hello";
let prop2="world";
let obj={
prop1,prop2,greet(){
return `${this.prop1} ${this.prop2}`;
  }
};
console.log(obj);           
console.log(obj.greet());  

• Task 9: Create an object with computed property names based on variables and log the object to the console.

let key1="name";
let key2="age";
let person={
[key1]:"abc";
[key2]:12;
};
console.log(person);
